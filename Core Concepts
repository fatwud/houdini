// While loop
// This loop will test to see if @P.y is greater than 15 and if so it will reduce the green index by 0.1. If the @Cd.g should ever drop below or equal to 0, it will be removed.
// The break function immediately exits the loop. 
while(@P.y< 15){
  @Cd.g -= 0.1;
  if(@Cd.g <= 0){
    removepoint(0,@ptnum);
  break;
}


// Do loop
// This loop will add 0.1 to @P.y, and will add 1 to the attribute counter. This will continue until @P.y is 1000 then move on to the next point.
{
  @P.y += 0.1;
  i@counter += 1;
}
while(@P.y<1000);

// Array
// This will create a local variable array called myArray, then also create and attribute call myArray.
// Note it is important where the brackets go. For local varaibles the need to go after the array name, for attributes they need to go after the data type but before the name.
// If you are setting an attribute array from a local array, you don't need the brackets after the local variable, Houdini will know that it is an array.
int myArray[] = {1,15,23,62};
i[]myArray = myArray;

// Foreach
// Create an array consisting of 3 sets of vectors, for each element (each set of vectors) in the array.
// Ff the vector is equal to {1,0,0} then set the value of the first element in the array [0], equal to a random value determined by its @ptnum and seed values.
v[]colors = {{1,0,0}, {0,1,0}, {0,0,1}}
foreach(vector x; @colors){
  if(x == {1,0,0})
    {
      @colors[0] = set(rand(@ptnum + 123), rand(@ptnum + 231), rand(@otnum + 312));
  }
}
